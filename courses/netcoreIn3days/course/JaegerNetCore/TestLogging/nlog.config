<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="info"
      >

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<!--<add assembly="NLog.Web.AspNetCore" />-->
		<add assembly="NLog.Targets.ElasticSearch"/>
	</extensions>

	<targets>
		<!--<target name="elastic" xsi:type="BufferingWrapper" flushTimeout="5000">
      <target xsi:type="ElasticSearch" uri="http://localhost:9200/" name="MyConsole"></target>
    </target>-->

		<target name="elastic" xsi:type="BufferingWrapper" flushTimeout="5000">
			<target xsi:type="ElasticSearch" layout="${logger} | ${threadid} | ${message}" includeAllProperties="true" requireAuth="true" username="user" password="pwd">
				<field name="user" layout="${environment-user}"/>
				<field name="host" layout="${machinename}"/>
				<field name="number" layout="1" layoutType="System.Int32"/>
				<!--<field name="test" layout="${event-properties:item=test}"/>-->
				<typeconverter objecttype="System.Uri, System.Private.Uri" />
			</target>
		</target>
		<target name="logfile" xsi:type="File" fileName="Logs\${date:universalTime=true:format=dd MM yyyy}.txt"
				layout="[${date:universalTime=true:format=HH.mm.ss.ffff}][${level}] -> ${message} ${exception:format=tostring}
                   ${onexception:inner=[${date:universalTime=true:format=HH.mm.ss.ffff}][${level}] -> ${message}${callsite:fileName=true}}" />
		<target name="logconsole" xsi:type="ColoredConsole"
				layout="[${date:universalTime=true:format=HH.mm.ss.ffff}][${level}] -> ${message} ${exception:format=tostring}
                   ${onexception:inner=[${date:universalTime=true:format=HH.mm.ss.ffff}][${level}] -> ${message}${callsite:fileName=true}}">
			<highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
			<highlight-row condition="level == LogLevel.Info" foregroundColor="Gray" />
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
			<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
		</target>
	</targets>
	<rules>
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!-- BlackHole without writeTo -->

		<logger name="*" minlevel="Trace" writeTo="logfile, logconsole,elastic" />
	</rules>
</nlog>